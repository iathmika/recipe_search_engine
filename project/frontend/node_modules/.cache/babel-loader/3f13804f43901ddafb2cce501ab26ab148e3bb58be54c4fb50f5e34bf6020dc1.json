{"ast":null,"code":"import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nfunction fireSyntheticPointerEvent(name, handler) {\n  if (!handler) return;\n  const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n  handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n  constructor() {\n    super(...arguments);\n    this.removeStartListeners = noop;\n    this.removeEndListeners = noop;\n    this.removeAccessibleListeners = noop;\n    this.startPointerPress = (startEvent, startInfo) => {\n      this.removeEndListeners();\n      if (this.isPressing) return;\n      const props = this.node.getProps();\n      const endPointerPress = (endEvent, endInfo) => {\n        if (!this.checkPressEnd()) return;\n        const {\n          onTap,\n          onTapCancel\n        } = this.node.getProps();\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(this.node.current, endEvent.target) ? onTapCancel && onTapCancel(endEvent, endInfo) : onTap && onTap(endEvent, endInfo);\n      };\n      const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n        passive: !(props.onTap || props[\"onPointerUp\"])\n      });\n      const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n        passive: !(props.onTapCancel || props[\"onPointerCancel\"])\n      });\n      this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n      this.startPress(startEvent, startInfo);\n    };\n    this.startAccessiblePress = () => {\n      const handleKeydown = keydownEvent => {\n        if (keydownEvent.key !== \"Enter\" || this.isPressing) return;\n        const handleKeyup = keyupEvent => {\n          if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd()) return;\n          fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n        };\n        this.removeEndListeners();\n        this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n        fireSyntheticPointerEvent(\"down\", (event, info) => {\n          this.startPress(event, info);\n        });\n      };\n      const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n      const handleBlur = () => {\n        if (!this.isPressing) return;\n        fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n      };\n      const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n      this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n    };\n  }\n  startPress(event, info) {\n    this.isPressing = true;\n    const {\n      onTapStart,\n      whileTap\n    } = this.node.getProps();\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n    if (whileTap && this.node.animationState) {\n      this.node.animationState.setActive(\"whileTap\", true);\n    }\n    onTapStart && onTapStart(event, info);\n  }\n  checkPressEnd() {\n    this.removeEndListeners();\n    this.isPressing = false;\n    const props = this.node.getProps();\n    if (props.whileTap && this.node.animationState) {\n      this.node.animationState.setActive(\"whileTap\", false);\n    }\n    return !isDragActive();\n  }\n  cancelPress(event, info) {\n    if (!this.checkPressEnd()) return;\n    const {\n      onTapCancel\n    } = this.node.getProps();\n    onTapCancel && onTapCancel(event, info);\n  }\n  mount() {\n    const props = this.node.getProps();\n    const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, {\n      passive: !(props.onTapStart || props[\"onPointerStart\"])\n    });\n    const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n    this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n  }\n  unmount() {\n    this.removeStartListeners();\n    this.removeEndListeners();\n    this.removeAccessibleListeners();\n  }\n}\nexport { PressGesture };","map":{"version":3,"names":["extractEventInfo","addDomEvent","addPointerEvent","Feature","pipe","isDragActive","isNodeOrChild","noop","fireSyntheticPointerEvent","name","handler","syntheticPointerEvent","PointerEvent","PressGesture","constructor","arguments","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","props","node","getProps","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","current","target","removePointerUpListener","window","passive","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","handleKeydown","keydownEvent","key","handleKeyup","keyupEvent","event","info","removeKeydownListener","handleBlur","removeBlurListener","onTapStart","whileTap","animationState","setActive","mount","removePointerListener","removeFocusListener","unmount"],"sources":["C:/Users/Radhikesh/Documents/University_of_Edinburgh/Text_Technologies_For_Data_Science/Group_Project/final_project/recipe_search_engine/project/frontend/node_modules/framer-motion/dist/es/gestures/press.mjs"],"sourcesContent":["import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}